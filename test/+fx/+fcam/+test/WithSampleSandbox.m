classdef WithSampleSandbox < fx.fcam.test.WithCleanWorkingDirectory
    
    properties( GetAccess = protected, Constant )
        Name(1,:) char = 'Sample Add On'
        ShortName(1,:) char = 'sample'
        TestFolder(1,:) char = 'tests'
        ParentPackages(1,:) cell = {'fx', 'submission'}
        ParentPackage(1,:) char = strjoin( fx.fcam.test.WithSampleSandbox.ParentPackages, '.' )
    end
    
    methods( TestMethodSetup )
        
        function createSandbox( this )
            mksandbox(...
                this.Root,...
                'Name', this.Name,...
                'ShortName', this.ShortName,...
                'TestFolder', this.TestFolder,...
                'ParentPackage', this.ParentPackage );
            packagePath = cellfun( @(str) sprintf( '+%s', str ), this.ParentPackages,...
                'UniformOutput', false );
            copyfile(...
                fullfile( fcamtestroot, 'Sample', 'giveMeTwice.m' ),...
                fullfile( this.Root, 'code', this.ShortName, 'giveMeTwice.m' )...
                );
            copyfile(...
                fullfile( fcamtestroot, 'Sample', 'splitSpaces.m' ),...
                fullfile( this.Root, 'code', this.ShortName, packagePath{:}, sprintf( '+%s', this.ShortName ), 'splitSpaces.m' )...
                );
            copyfile(...
                fullfile( fcamtestroot, 'Sample', 'tgiveMeTwice.m' ),...
                fullfile( this.Root, this.TestFolder, packagePath{:}, sprintf( '+%s', this.ShortName ), '+test', 'tgiveMeTwice.m' )...
                );
            copyfile(...
                fullfile( fcamtestroot, 'Sample', 'tsplitSpaces.m' ),...
                fullfile( this.Root, this.TestFolder, packagePath{:}, sprintf( '+%s', this.ShortName ), '+test', '+unittest', 'tsplitSpaces.m' )...
                );
        end
        
    end
    
end